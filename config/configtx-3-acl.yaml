Organizations:
    - &orderer
        Name: orderer
        ID: orderer
        MSPDir: ../crypto-config/ordererOrganizations/orderer.vdoservices.in/msp
        Policies: &OrdererOrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('orderer.member')"
            Writers:
                Type: Signature
                Rule: "OR('orderer.member')"
            Admins:
                Type: Signature
                Rule: "OR('orderer.admin')"
    
    - &iinrg
        Name: iinrg
        skipAsForeign: false
        ID: iinrg
        MSPDir: ../crypto-config/peerOrganizations/iinrg.vdoservices.in/msp
        Policies: &IINRGOrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('iinrg.member')"
            Writers:
                Type: Signature
                Rule: "OR('iinrg.member')"
            Admins:
                Type: Signature
                Rule: "OR('iinrg.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('iinrg.member')"
        OrdererEndPoints:
            - "orderer.iinrg.vdoservices.in:7050"
    
    - &fpo1
        Name: fpo1
        skipAsForeign: false
        ID: fpo1
        MSPDir: ../crypto-config/peerOrganizations/fpo1.vdoservices.in/msp
        Policies: &Fpo1OrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('fpo1.member')"
            Writers:
                Type: Signature
                Rule: "OR('fpo1.member')"
            Admins:
                Type: Signature
                Rule: "OR('fpo1.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('fpo1.member')"
        OrdererEndPoints:
            - "orderer.fpo1.vdoservices.in:7051"

    - &fpo2
        Name: fpo2
        skipAsForeign: false
        ID: fpo2
        MSPDir: ../crypto-config/peerOrganizations/fpo2.vdoservices.in/msp
        Policies: &Fpo2OrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('fpo2.member')"
            Writers:
                Type: Signature
                Rule: "OR('fpo2.member')"
            Admins:
                Type: Signature
                Rule: "OR('fpo2.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('fpo2.member')"
        OrdererEndPoints:
            - "orderer.fpo2.vdoservices.in:7052"

Capabilities:
    Channel: &ChannelCapabilities
        v2_4: true
    Orderer: &OrdererCapabilities
        v2_4: true
    Application: &ApplicationCapabilities
        v2_4: true

Application: &ApplicationDefaults
    ACLs: &ACLsDefault
        # This section provides defaults for policies for various resources
        # in the system. These "resources" could be functions on system chaincodes
        # (e.g., "GetBlockByNumber" on the "qscc" system chaincode) or other resources
        # (e.g.,who can receive Block events). This section does NOT specify the resource's
        # definition or API, but just the ACL policy for it.
        #
        # Users can override these defaults with their own policy mapping by defining the
        # mapping under ACLs in their channel definition

        #---New Lifecycle System Chaincode (_lifecycle) function to policy mapping for access control--#

        # ACL policy for _lifecycle's "CheckCommitReadiness" function
        _lifecycle/CheckCommitReadiness: /Channel/Application/Writers

        # ACL policy for _lifecycle's "CommitChaincodeDefinition" function
        _lifecycle/CommitChaincodeDefinition: /Channel/Application/Writers

        # ACL policy for _lifecycle's "QueryChaincodeDefinition" function
        _lifecycle/QueryChaincodeDefinition: /Channel/Application/Writers

        # ACL policy for _lifecycle's "QueryChaincodeDefinitions" function
        _lifecycle/QueryChaincodeDefinitions: /Channel/Application/Writers

        #---Lifecycle System Chaincode (lscc) function to policy mapping for access control---#

        # ACL policy for lscc's "getid" function
        lscc/ChaincodeExists: /Channel/Application/Readers

        # ACL policy for lscc's "getdepspec" function
        lscc/GetDeploymentSpec: /Channel/Application/Readers

        # ACL policy for lscc's "getccdata" function
        lscc/GetChaincodeData: /Channel/Application/Readers

        # ACL Policy for lscc's "getchaincodes" function
        lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

        #---Query System Chaincode (qscc) function to policy mapping for access control---#

        # ACL policy for qscc's "GetChainInfo" function
        qscc/GetChainInfo: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByNumber" function
        qscc/GetBlockByNumber: /Channel/Application/Readers

        # ACL policy for qscc's  "GetBlockByHash" function
        qscc/GetBlockByHash: /Channel/Application/Readers

        # ACL policy for qscc's "GetTransactionByID" function
        qscc/GetTransactionByID: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByTxID" function
        qscc/GetBlockByTxID: /Channel/Application/Readers

        #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

        # ACL policy for cscc's "GetConfigBlock" function
        cscc/GetConfigBlock: /Channel/Application/Readers

        # ACL policy for cscc's "GetChannelConfig" function
        cscc/GetChannelConfig: /Channel/Application/Readers

        #---Miscellaneous peer function to policy mapping for access control---#

        # ACL policy for invoking chaincodes on peer
        peer/Propose: /Channel/Application/Writers

        # ACL policy for chaincode to chaincode invocation
        peer/ChaincodeToChaincode: /Channel/Application/Writers

        #---Events resource to policy mapping for access control###---#

        # ACL policy for sending block events
        event/Block: /Channel/Application/Readers

        # ACL policy for sending filtered block events
        event/FilteredBlock: /Channel/Application/Readers

    # Organizations lists the orgs participating on the application side of the
    # network.
    Organizations:
        - *iinrg
        - *fpo1
        - *fpo2

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies: &ApplicationDefaultPolicies
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Capabilities describes the application level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ApplicationCapabilities

Orderer: &OrdererDefaults
    OrdererType: etcdraft
    Addresses:
        - 127.0.0.1:7050

    BatchTimeout: 2s
    BatchSize:
        MaxMessageCount: 500
        AbsoluteMaxBytes: 10 MB
        PreferredMaxBytes: 2 MB
    MaxChannels: 0 # no limit
    EtcdRaft: 
        Consenters:
            - Host: orderer.iinrg.vdoservices.in
              Port: 7050
              ClientTLSCert: ../crypto-config/ordererOrganizations/orderer.vdoservices.in/orderers/orderer1.orderer.vdoservices.in/tls/server.crt
              ServerTLSCert: ../crypto-config/ordererOrganizations/orderer.vdoservices.in/orderers/orderer1.orderer.vdoservices.in/tls/server.crt
            - Host: orderer.fpo1.vdoservices.in
              Port: 7051
              ClientTLSCert: ../crypto-config/ordererOrganizations/orderer.vdoservices.in/orderers/orderer2.orderer.vdoservices.in/tls/server.crt
              ServerTLSCert: ../crypto-config/ordererOrganizations/orderer.vdoservices.in/orderers/orderer2.orderer.vdoservices.in/tls/server.crt
            - Host: orderer.fpo2.vdoservices.in
              Port: 7052
              ClientTLSCert: ../crypto-config/ordererOrganizations/orderer.vdoservices.in/orderers/orderer3.orderer.vdoservices.in/tls/server.crt
              ServerTLSCert: ../crypto-config/ordererOrganizations/orderer.vdoservices.in/orderers/orderer3.orderer.vdoservices.in/tls/server.crt
        Options:
            TickInterval: 500ms
            ElectionTick: 10
            HeartbeatTick: 1
            MaxInflightBlocks: 5
            SnapshotIntervalSize: 16 MB
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule:  "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"
    Capabilities:
        <<: *OrdererCapabilities

Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule:  "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ChannelCapabilities

Profiles:
    ProducerChannel:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                -   <<: *orderer
                    Policies:
                        <<: *OrdererOrgPolicies
                        Admins:
                            Type: Signature
                            Rule: "OR('orderer.member')"
        Application:
            <<: *ApplicationDefaults
            Organizations:
                -   <<: *iinrg
                    Policies:
                        <<: *IINRGOrgPolicies
                        Admins:
                            Type: Signature
                            Rule: "OR('iinrg.member')"
                -   <<: *fpo1
                    Policies:
                        <<: *Fpo1OrgPolicies
                        Admins:
                            Type: Signature
                            Rule: "OR('fpo1.member')"



